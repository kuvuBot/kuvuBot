@page "{search?}"


@model LeaderboardModel
@{
    ViewData["Title"] = "Leaderboard";
}

<section id="leaderboard">
    @if (TempData["message"] != null)
    {
        <div class="alert alert-@(TempData["message"].ToString().StartsWith("Error") ? "danger" : "success")" role="alert">
            @TempData["message"]
        </div>
    }
    @if (Model.Guild != null)
    {
        <div class="container">
            <img class="float-left rounded-circle p-1" src="@(Model.DGuild.IconUrl)" width="60" height="60" />
            <h1>@Model.DGuild.Name leaderboard</h1>
            <section id="leaderboard">
                <div class="container">
                    <table class="table table-dark mx-auto text-left">
                        <thead>
                            <tr>
                                <th scope="col">Rank</th>
                                <th scope="col">Nickname</th>
                                <th scope="col">Level</th>
                                <th scope="col">EXP</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{ var rank = 1; }
                            @foreach (var player in Model._BotContext.Users.Where(x => x.Guild == Model.Guild).OrderByDescending(x => x.Exp).Take(10))
                            {
                                var discordUser = await kuvuBot.Program.Client.GetUserAsync(player.DiscordUser);
                                <tr>
                                    <th scope="row">@rank</th>
                                    <th><img src="@(discordUser.AvatarUrl)" class="rounded-circle" height="40" width="40" /> @discordUser.Username#@discordUser.Discriminator</th>
                                    <td>@player.GetLevel()</td>
                                    <td>@player.Exp/@KuvuUser.ConvertLevelToExp(player.GetLevel() + 1)</td>
                                </tr>
                                rank++;
                            }
                        </tbody>
                    </table>
                </div>
            </section>
        </div>
    }
    else
    {
        <div class="container text-center d-flex flex-column align-items-center pb-3">
            <h2 class="text-center mb-5 pt-2">Leaderboard</h2>
            <p>To see leaderboard, search server by its name or ID</p>
            <div class="input-group mb-3 leaderboard-search">
                <input type="text" class="form-control" id="leaderboardSearchInput"
                       placeholder="Discord server name or ID" aria-label="Discord server name or ID"
                       aria-describedby="leaderboardSearchButton">
                <div class="input-group-append">
                    <button class="btn btn-outline-secondary" type="button" id="leaderboardSearchButton"
                            onclick="if (!window.__cfRLUnblockHandlers) return false; window.location.assign('leaderboard?search=' + $('#leaderboardSearchInput').val())">
                        Search
                    </button>
                </div>
            </div>
            @if (!User.Identity.IsAuthenticated)
            {
                <p>or, login with discord to see guilds are you in.</p>
            }
            else
            {
                <div class="row mx-auto">
                    @foreach (var guild in Model.Client.Guilds.Select(x => x.Value).Where(x => Model._BotContext.Guilds.Any(k => k.GuildId == x.Id)))
                    {
                        <div class="card m-2 mx-auto" style="width: 8rem;">
                            <img src="@(guild.IconUrl ?? "https://discordapp.com/assets/e05ead6e6ebc08df9291738d0aa6986d.png")" class="card-img-top guild-icon" alt="Guild icon">
                            <div class="card-body">
                                <h5 class="card-title">@guild.Name</h5>

                                @{
                                    var routeData = new Dictionary<string, string>()
                                    {
                                        ["search"] = guild.Id.ToString(),
                                    };
                                }
                                <a asp-page="/Leaderboard" asp-all-route-data="routeData" class="btn btn-primary">Go</a>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    }
</section>